// copied from Marie's snippets at https://bitbucket.rki.local/projects/BBR/repos/config-snippets/browse/nextflow/profile/rki_profile.config

params {
    conda_cache_dir = "conda"
    conda_create_options = ''
    conda_create_timeout = '20 min'
    max_cpus = '50'
    singularity_cache_dir = "singularity"

    publish_dir_mode = 'copy'

    // defaults used for ONT QC
    krakendb                    = "/scratch/databases/kraken2/kraken2_pluspfp_20240904/"
    chopper_args                = " -q 20 -l 500 "
    outdir                      = "analyses"
    multiqc_config              = "$baseDir/conf/multiqc_config.yml"


    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                      = null

    // MultiQC options
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'

    // Boilerplate options
    monochrome_logs              = false
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load required module configurations
includeConfig './conf/modules.config'

// Load base config with general options for ressource requirements
includeConfig './conf/base.config'

profiles {
    rki_conda {
        conda {
                enabled = true
                cacheDir = params.conda_cache_dir
                createOptions = params.conda_create_options
                createTimeout = params.conda_create_timeout
        }
    } 


    rki_mamba {
        conda {
            useMamba = true
            enabled = true
            cacheDir = params.conda_cache_dir
            createOptions = params.conda_create_options
            createTimeout = params.conda_create_timeout
        }
    }

    rki_singularity {
        singularity { 
            enabled = true
            autoMounts = true
            envWhitelist = "HTTPS_PROXY,HTTP_PROXY,http_proxy,https_proxy,FTP_PROXY,ftp_proxy"
            cacheDir = params.singularity_cache_dir
        }
    }

    rki_slurm { 
        executor {
            name = "slurm"
            queueSize = 200
            // exitReadTimeout = "360 sec"
            // submitRateLimit = '1 / 2 s'
            // pollInterval = '30 sec'
        }
        process {
            cache = "lenient"
        }
    }

    rki_priority {
        process {
            clusterOptions = '--partition=priority'
        }
    }
}

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    RKI/manifestation Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/


// Load nf-core custom profiles from different Institutions
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load RKI/manifestation custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/manifestation.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
singularity.registry  = 'quay.io'



// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'ont-qc'
    author          = """ktrappe""" // The author field is deprecated from Nextflow version 24.10.0, use contributors instead
    contributors    = [
        // TODO nf-core: Update the field with the details of the contributors to your pipeline. New with Nextflow version 24.10.0
        [
            name: 'ktrappe',
            affiliation: 'RKI',
            email: '',
            github: 'https://github.com/rki-mf1/ont-qc',
            contribution: [], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: ''
        ],
    ]
    homePage        = ''
    description     = """Nanopore Quality Control and Filtering Pipeline"""
    mainScript      = 'main.nf'
    defaultBranch   = 'main'
    //nextflowVersion = '!>=24.04.2'
    version         = '1.0.0dev'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.2.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

//validation {
//    defaultIgnoreParams = ["genomes"]
//    monochromeLogs = params.monochrome_logs
//    help {
//        enabled = true
//        command = "nextflow run RKI/manifestation -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
//        fullParameter = "help_full"
//        showHiddenParameter = "show_hidden"
//    }
//}
