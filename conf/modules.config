// module configs required by the pipeline 
// (i.e. ensuring correct input/output format)
process {

    withName: KRAKEN2_KRAKEN2 {
        memory = 200.GB
        publishDir = [
            path: { "${params.outdir}/02_classification" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        // ext.args   = "-b -F 4 --output-fmt bam --write-index"
    }
    withName: KRONA_KTIMPORTTEXT {
        ext.prefix = { "${meta.id}.kronaplot" } 
        publishDir = [
            path: { "${params.outdir}/02_classification" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: CHOPPER {
        ext.prefix = { "${meta.id}.chopped" } 
        ext.args2   = params.chopper_args
        publishDir = [
            path: { "${params.outdir}/01_trimming" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: FASTQC {
        //memory = 1000.MB
        memory = 100.GB
        cpus = 10
        publishDir = [
            path: { "${params.outdir}/03_fastqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC_CHOPPED {
        ext.prefix = { "${meta.id}_chopped" } 
        //memory = 1000.MB
        memory = 100.GB
        cpus = 10
        publishDir = [
            path: { "${params.outdir}/03_fastqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MULTIQC {
        // https://multiqc.info/docs/reports/customisation/
        //ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/05_report" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: NANOPLOT {
        ext.args = { "--prefix ${meta.id}_raw_" } 
        memory = 100.GB
        cpus = 10
        publishDir = [
            path: { "${params.outdir}/04_nanoplot" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: NANOPLOT_CHOPPED {
        errorStrategy = 'ignore'
        ext.args = { "--prefix ${meta.id}_chopped_" } 
        memory = 100.GB
        cpus = 10
        publishDir = [
            path: { "${params.outdir}/04_nanoplot" },
            pattern: { "*NanoStats.txt" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
